reduction
{
  // one queen per column and row
  for(i=0 ; i<in ; ++i){
    fr = "exactly 1";
    fc = "exactly 1";
    for(j=0 ; j<in ; ++j){
      fr = fr + " row{i}col{j}";
      fc = fc + " row{j}col{i}";
    }
    insertsat(fr);
    insertsat(fc);
  }
  // one queen per diagonal / and one per diagonal \
  for(direction=0 ; direction<2 ; ++direction){
    for(i=0 ; i<in+in-1 ; ++i){
      x = min(i,in-1);
      y = max(0,i-(in-1));
      if (direction){
	r = in-1-y;
	c = x;
	xd = -1;
	yd = -1;
      }else{
	r = x;
	c = y;
	xd = -1;
	yd = 1;
      }
      fd = "atmost 1";
      for(j=0 ; j<in ; ++j){
	x = r + xd*j;
	y = c + yd*j;
	if (x>=0 and x<in and y>=0 and y<in)
	  fd = fd + " row{x}col{y}";
      }
      insertsat(fd);
    }
  }
}

reconstruction
{
  for(i=0 ; i<in ; ++i)
    for(j=0 ; j<in ; ++j)
      out[i][j] = model["row{i}col{j}"];
}
