reduction{

//x{i}{j}{k}: cell (i,j) is the k-th cell.

//every cell appears in the path once
for(i=0;i<n;i++){
  for(j=0;j<n;j++){
    exactly 1{
      for(k=0;k<n*n;k++){
        "x{i}{j}{k}";
      }
    };
  }
}

//every index appears in the path once
for(k=0;k<n*n;k++){
  exactly 1{
    for(i=0;i<n;i++){
      for(j=0;j<n;j++){
        "x{i}{j}{k}";
      }
    }
  };
}  
  
  
//the i-th cell matches the i-th element of the sequence:
for(i=0;i<n;i++){
  for(j=0;j<n;j++){
    for(k=0;k<n*n;k++){
      if(M[i][j] != S[k]) {
        not "x{i}{j}{k}";
      }
    }
  }
}

//the path starts at the top-left cell
"x{0}{0}{0}";

//everyone, except the first cell, has a previous cell
for(i=0;i<n;i++){
  for(j=0;j<n;j++){
    if(i > 0) {
      "up{i}{j}" iff or{
        for(k=0;k<n*n-1;k++){
          "x{i-1}{j}{k}" and "x{i}{j}{k+1}";
        }
      };
    }
    if(j > 0) {
      "left{i}{j}" iff or{
      for(k=0;k<n*n-1;k++){
        "x{i}{j-1}{k}" and "x{i}{j}{k+1}";
      }
      };
    }
    if (i != 0 or j != 0) {
      if (i < n-1) {
        "down{i}{j}" iff or {
        for(k=0;k<n*n-1;k++){
          "x{i+1}{j}{k}" and "x{i}{j}{k+1}";
        }
        };
      }
      if (j < n-1) {
        "right{i}{j}" iff or {
        for(k=0;k<n*n-1;k++){
          "x{i}{j+1}{k}" and "x{i}{j}{k+1}";
        }
        };
      }
    }
  }
}

//everyone, except the first cell, has a previous cell
for(i=0;i<n;i++){
  for(j=0;j<n;j++){
    if (i != 0 or j != 0) or {
    if(i > 0) {
      "up{i}{j}";
    }
    if(j > 0) {
      "left{i}{j}";
    }
    if (i != 0 or j != 0) {
      if (i < n-1) {
        "down{i}{j}";
      }
      if (j < n-1) {
        "right{i}{j}";
      }
    }
    };
  }
}

}


