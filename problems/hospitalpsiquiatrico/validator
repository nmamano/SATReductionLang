// in: struct {
//   input: the same input received by propuestasolucion
//   solution: the solution reconstructed by propuestasolucion
// }
// out: struct {
//   valid: int
//   msg: string
// }
main {
     valid = 0;
     
     inp &= input;
     sol &= solution.rooms;
     n = inp.patients.size;
     n1=inp.n;
     n2=inp.m;
     k=n1+n2;
     pats &= inp.patients;

     //check that the solution has the correct format
     if(sol.size<n){
       msg="The solution should have the same size as patients ("+n+"), but it has size "+sol.size+".";
       stop;
     }
     for(i=0;i<n;i++){
       if(sol[i]<0 or sol[i]>=k){
	 msg="The element "+i+" of the solution is "+sol[i]+", but it should be a room identifier, i.e. a value between 0 and n+m-1 ("+(k-1)+")";
	 stop;
       }
     }
     //check that room capacities are not exceeded
     for(i=0;i<k;i++){
       count=0;
       diog=0;
       for(j=0;j<n;j++){
	 if(sol[j]==i){
	   count++;
	   if(pats[j]==4)diog++;
	 }
       }
       cap=count+diog*2;
       if(i<n1 and cap>4){
	 msg="There are "+count+" patients, of which "+diog+" have diogenes syndrome, assigned to room "+i+", which is a small room and has capacity 4.";
	 stop;
       }
       if(i>=n1 and cap>6){
	 msg="There are "+count+" patients, of which "+diog+" have diogenes syndrome, assigned to room "+i+", which is a large room and has capacity 6.";
	 stop;
       }
     }
     //profiles
     for(i=0;i<n;i++){
       if(pats[i]==1){
	 if(sol[i]<n1){
	   msg="The patient "+i+" is claustrophobic and is assigned to the room "+sol[i]+", which is small.";
	   stop;
	 }
       }
       if(pats[i]==2){
	 count=0;
	 for(j=0;j<n;j++){
	   if(sol[j]==sol[i])count++;
	 }
	 if(count>3){
	   msg="The patient "+i+" is agoraphobic and is assigned to the room "+sol[i]+", which has "+count+" assigned patients in total.";
	   stop;
	 }
       }
       if(pats[i]==3){
	 count=0;
	 for(j=0;j<n;j++){
	   if(sol[j]==sol[i])count++;
	 }
	 if(count==1){
	   msg="The patient "+i+" is schizophrenic and is assigned to the room "+sol[i]+", which has no other patients assigned.";
	   stop;
	 }
       }
     }
     //danger
     for(i=0;i<n;i++){
       for(j=i+1;j<n;j++){
	 if(sol[i]==sol[j] and (pats[i]==3 or pats[i]==5) and (pats[j]==3 or pats[j]==5)){
	   msg="The patients "+i+" and "+j+" are both considered dangerous and are both assigned to the room "+sol[i]+".";
	   stop;
	 }
       }
     }
     //saturation
     for(i=0;i<n1;i++){
       count=0;
       for(j=0;j<n;j++)if(sol[j]==i and pats[j]==2)count++;
       if(count>2){
	 msg="The small room "+i+" has "+count+" agoraphobic patients, but it should have at most 2.";
	 stop;
       }
     }
     for(i=n1;i<k;i++){
       count=0;
       for(j=0;j<n;j++)if(sol[j]==i and pats[j]==1)count++;
       if(count>3){
	 msg="The large room "+i+" has "+count+" claustrophobic patients, but it should have at most 3.";
	 stop;
       }
     }

     valid=1;
     msg="And it is correct.";
}
