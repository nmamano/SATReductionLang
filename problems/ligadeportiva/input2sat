reduction
{
  // each team play against each other team
  for(t1=0 ; t1<n ; ++t1)
    for(t2=t1+1 ; t2<n ; ++t2){
      exactly 1 {
        for(r=0 ; r<n-1 ; ++r){
          "{r}match{t1}vs{t2}";
          "{r}match{t2}vs{t1}";
        }
      };
    }
  // just one match per team and round (also setting the away variable)
  for(r=0 ; r<n-1 ; ++r)
    for(t1=0 ; t1<n ; ++t1){
      exactly 1 {
        for(t2=0 ; t2<n ; ++t2)
          if (t1 != t2) {
            "{r}match{t1}vs{t2}";
            "{r}match{t2}vs{t1}";
          }
      };
      "{r}away{t1}" iff or {
        for(t2=0 ; t2<n ; ++t2)
          if (t1 != t2)
            "{r}match{t2}vs{t1}";
      };
    }
  // desired amount of away matches per team, and no tripititions
  for(t=0 ; t<n ; ++t){
    exactly (n/2-1) {
      for(r=0 ; r<n-1 ; ++r) "{r}away{t}";
    } or exactly (n/2) {
      for(r=0 ; r<n-1 ; ++r) "{r}away{t}";
    };
    for(r=0 ; r<n-1-2 ; ++r){
      " {r}away{t}" or " {r+1}away{t}" or " {r+2}away{t}";
      not "{r}away{t}" or not "{r+1}away{t}" or not "{r+2}away{t}";
    }
  }
  // no playing in unavailable stadiums
  for u in unavailable_stadiums
    "{u[1]}away{u[0]}";
  // no two simultaneous matches in the same shared stadium
  for s in shared_stadiums
    for(r=0 ; r<n-1 ; ++r)
      "{r}away{s[0]}" or "{r}away{s[1]}" or "{r}match{s[0]}vs{s[1]}" or "{r}match{s[1]}vs{s[0]}";
}
